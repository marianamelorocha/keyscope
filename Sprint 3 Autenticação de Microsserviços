var express = require('express');
var bodyParser = require('body-parser');
var fs = require('fs');
var jwt = require('jsonwebtoken')

var app = express();

const SECRET = '.K7]iO%}8m9At#c5(t*!'
const EXPIRES = 1800

app.use(bodyParser.urlencoded({ extended:true }));
app.use(bodyParser.json());

app.use(function(req, res, next){
 res.setHeader("Access-Control-Allow-Origin", "*");
 res.setHeader("Access-Control-Allow-Methods", "GET, POST, PUT, DELETE");
 res.setHeader("Access-Control-Allow-Headers", "content-type");
 res.setHeader("Content-Type", "application/json");
 res.setHeader("Access-Control-Allow-Credentials", true);
 next();
});

app.listen(8081, function(){ console.log('Servidor api-user rodando na porta 8081') });

var myUserRepository = 'user.json';

// GET ALL
app.get('/rest/user', function(req, res) {
  
    const authorization = req.headers['authorization']
    if(!checkToken(authorization)) {
      return res.sendStatus(401);
    }

    fs.readFile(myUserRepository, 'utf8', function(err, data) {
      if (err) {
        var response = {status: 'falha', resultado: err};
        res.json(response);
      } else {
        var response = {status: 'sucesso', resultado: JSON.parse(data)};
        res.json(response);
      }
    });
   });

// GET filter user
app.get('/rest/user/filter', function(req, res){
    
    const authorization = req.headers['authorization']
    if(!checkToken(authorization)) {
      return res.sendStatus(401);
    }

    fs.readFile(myUserRepository, 'utf8', function(err, data){
      if (err) {
        var response = {status: 'falha', resultado: err};
        res.json(response);
      } else {
        var obj = JSON.parse(data);
        var result = 'Nenhum usuário foi encontrado';
    
        obj.usuarios.forEach(function(usuario) {
          if (usuario != null) {
            console.log('usuario: ', usuario);
            if (usuario.userId == req.query.userId) {
              result = usuario;
            }
          }
        });
    
        var response = {status: 'sucesso', resultado: result};
        res.json(response);
      }
    });
   });

//POST Usuarios
app.post('/rest/user', function(req, res){

    const authorization = req.headers['authorization']
    if(!checkToken(authorization)) {
      return res.sendStatus(401);
    }

    fs.readFile(myUserRepository, 'utf8', function(err, data){
      if (err) {
        var response = {status: 'falha', resultado: err};
        res.json(response);
      } else {
        var obj = JSON.parse(data);
        req.body.userId = obj.usuarios.length + 1;
    
        obj.usuarios.push(req.body);
    
        fs.writeFile(myUserRepository, JSON.stringify(obj), function(err) {
          if (err) {
            var response = {status: 'falha', resultado: err};
            res.json(response);
          } else {
            var response = {status: 'sucesso', resultado: 'Registro incluso com sucesso'};
            res.json(response);
          }
        });
      }
    });
   });


 // PUT Usuario
 app.put('/rest/user', function(req, res){

    const authorization = req.headers['authorization']
    if(!checkToken(authorization)) {
      return res.sendStatus(401);
    }

    fs.readFile(myUserRepository, 'utf8', function(err, data){
      if (err) {
        var response = {status: 'falha', resultado: err};
        res.json(response);
      } else {
        var obj = JSON.parse(data);
    console.log("Nome : "+req.body.nome)
        obj.usuarios[(req.body.userId)].nome = req.body.nome;
        obj.usuarios[(req.body.userId)].email = req.body.email;
        obj.usuarios[(req.body.userId)].pais = req.body.pais;
        obj.usuarios[(req.body.userId)].senha = req.body.senha;
    
        fs.writeFile(myUserRepository, JSON.stringify(obj), function(err) {
          if (err) {
            var response = {status: 'falha', resultado: err};
            res.json(response);
          } else {
            var response = {status: 'sucesso', resultado: 'Registro editado com sucesso'};
            res.json(response);
          }
        });
      }
    });
   });  


//DELETE usuarios
app.delete('/rest/user', function(req, res){

    const authorization = req.headers['authorization']
    if(!checkToken(authorization)) {
      return res.sendStatus(401);
    }

    fs.readFile(myUserRepository, 'utf8', function(err, data){
      if (err) {
        var response = {status: 'falha', resultado: err};
        res.json(response);
      } else {
        var obj = JSON.parse(data);
    
        delete obj.usuarios[(req.body.userId)];
    
        fs.writeFile(myUserRepository, JSON.stringify(obj), function(err) {
          if (err) {
            var response = {status: 'falha', resultado: err};
            res.json(response);
          } else {
            var response = {status: 'sucesso', resultado: 'Registro excluído com sucesso'};
            res.json(response);
          }
        });
      }
    });
   });   

//Check user token authorities
function checkToken(authorization) {
  if (authorization != undefined) {
    const token = authorization.replace('Bearer ', '')
    try {
      const {userId, role} = jwt.verify(token, SECRET)
      console.log('CheckToken do userId: '+userId+ ' Role: '+role)
        if (role === 'admin' && userId != '') {
          console.log('Validado')
          return true;
        }
    } catch(err){
      console.error('CheckToken error: ', err)
      return false;
    }
  }
  return false;
}

// Authenticate User
app.post('/rest/user/login', (req, res) => {
    const {email, senha } = req.body
    var success = false 
   
    fs.readFile(myUserRepository, 'utf8', function(err, data) {
        var obj = JSON.parse(data);
        obj.usuarios.forEach(function(usuario) {
          if (usuario != null) {
             
            if (usuario.email == email && usuario.senha == senha) {
                console.log('usuario: ', usuario);
                const token = jwt.sign(
                    {userId: usuario.userId, role: 'admin'},
                    SECRET,
                    {algorithm: 'HS256', expiresIn: EXPIRES }
                )
                success = true 
                console.log('Logou : ', token)
                res.json({token: token});
              }
          } else {
            fs.close();
            return res.sendStatus(401);
          }
        });  
    });
 });
